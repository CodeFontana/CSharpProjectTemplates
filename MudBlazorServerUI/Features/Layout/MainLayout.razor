@inherits LayoutComponentBase
@inject NavigationManager NavMan
@inject ILocalStorageService LocalStorage
@inject IWebHostEnvironment WebHostEnv

<MudThemeProvider Theme="_theme" @bind-IsDarkMode="@_isDarkMode" />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="5" Dense="true">

        @if (_drawerOpen == false)
        {
            <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="() => _drawerOpen = !_drawerOpen" />
            <MudText Typo="Typo.h6" Style="white-space: nowrap">Blazor Server</MudText>
        }

        <MudSpacer />

        @if (_isDarkMode == false)
        {
            <MudButton OnClick="@((e) => ToggleThemeAsync())" Style="color: white;"><MudIcon Icon="@Icons.Material.Filled.DarkMode"></MudIcon></MudButton>
        }
        else
        {
            <MudButton OnClick="@((e) => ToggleThemeAsync())" Style="color: white;"><MudIcon Icon="@Icons.Material.Filled.LightMode"></MudIcon></MudButton>
        }

    </MudAppBar>

    <MudDrawer @bind-Open="_drawerOpen" Elevation="5">
        <MudDrawerHeader Class="d-flex align-center pt-0">
            <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="() => _drawerOpen = !_drawerOpen" />
            <MudText Typo="Typo.h6" Style="white-space: nowrap">Blazor Server</MudText>
        </MudDrawerHeader>
        <MudDrawerContainer>

            <MudNavLink Href="/" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Home">
                <MudText Typo="Typo.body1">Home</MudText>
            </MudNavLink>

            <MudNavLink Href="/counter" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Add">
                <MudText Typo="Typo.body1">Counter</MudText>
            </MudNavLink>

            @if (WebHostEnv.IsDevelopment())
            {
                <MudNavLink Href="/theme" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Palette">
                    <MudText Typo="Typo.body1">Themes</MudText>
                </MudNavLink>
            }

        </MudDrawerContainer>
    </MudDrawer>

    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.False" Class="pt-4 px-0">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    private MudTheme _theme = new();
    private bool _isDarkMode;
    private bool _drawerOpen = true;

    protected override async Task OnInitializedAsync()
    {
        string? theme = await LocalStorage.GetItemAsync<string>("Theme");

        if (string.IsNullOrWhiteSpace(theme)
            || string.Equals(theme, "Light", System.StringComparison.InvariantCultureIgnoreCase))
        {
            _isDarkMode = false;
        }
        else
        {
            _isDarkMode = true;
        }
    }

    private async Task ToggleThemeAsync()
    {
        if (_isDarkMode == false)
        {
            _isDarkMode = true;
            await LocalStorage.SetItemAsync("Theme", "Dark");
        }
        else
        {
            _isDarkMode = false;
            await LocalStorage.SetItemAsync("Theme", "Light");
        }
    }
}