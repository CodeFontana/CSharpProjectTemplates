@using Microsoft.AspNetCore.Components.WebAssembly.Hosting
@inherits LayoutComponentBase

<PageTitle>Blazor Client</PageTitle>

<MudThemeProvider Theme="_currentTheme" />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout Style="min-width: 350px;">
    <MudAppBar Elevation="5" Dense="true" Color="@(_currentTheme == lightTheme ? Color.Primary : Color.Primary)">

        @if (_drawerOpen == false)
        {
            <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="() => _drawerOpen = !_drawerOpen" />
            <MudText Typo="Typo.h6" Style="white-space: nowrap">Blazor Client</MudText>
        }

        <AuthorizeView Context="AppBarContext">

            <Authorized>
                <MudSpacer />
                <MudLink Class="d-flex gap-2 mx-2" Href="/logout" Typo="Typo.body2">
                    <MudIcon Icon="@Icons.Material.Filled.Logout" Style="color: white;" />
                    <MudText Typo="Typo.body1" Inline="true" Style="color: white;">Logout</MudText>
                </MudLink>
            </Authorized>

            <NotAuthorized>
                <MudSpacer />
                <EditForm class="d-none d-md-flex align-center" Model="@_loginUser" OnValidSubmit="HandleLoginAsync">
                    <MudTextField Class="d-inline-flex mx-2"
                                  Variant="Variant.Outlined"
                                  Margin="Margin.Dense"
                                  Label="Username"
                                  @bind-Value="_loginUser.Username"
                                  Adornment="Adornment.End"
                                  AdornmentIcon="@Icons.Filled.Person"
                                  AdornmentAriaLabel="Username"
                                  Style=@(_currentTheme == lightTheme ? "color: #495057; background: #FFFFFF; border-radius: .25rem;" : "") />
                    <MudTextField Class="d-inline-flex mx-2"
                                  Variant="Variant.Outlined"
                                  Margin="Margin.Dense" Label="Password"
                                  InputType="@_passwordInput"
                                  @bind-Value="_loginUser.Password"
                                  Adornment="Adornment.End"
                                  AdornmentIcon="@_passwordInputIcon"
                                  OnAdornmentClick="ToggleShowPassword"
                                  AdornmentAriaLabel="Show Password"
                                  Style=@(_currentTheme == lightTheme ? "color: #495057; background: #FFFFFF; border-radius: .25rem;" : "") />
                    <MudButton Class="d-inline-flex mx-2"
                               Variant="Variant.Filled"
                               Color="Color.Secondary"
                               ButtonType="ButtonType.Submit"
                               Size="Size.Medium"
                               StartIcon="@Icons.Filled.Login">
                        Login
                    </MudButton>
                </EditForm>
            </NotAuthorized>

        </AuthorizeView>

        @if (_currentTheme == lightTheme)
        {
            <MudButton OnClick="@((e) => ToggleThemeAsync())"><MudIcon Icon="@Icons.Material.Filled.DarkMode" Color="Color.Default"></MudIcon></MudButton>
        }
        else
        {
            <MudButton OnClick="@((e) => ToggleThemeAsync())"><MudIcon Icon="@Icons.Material.Filled.LightMode"></MudIcon></MudButton>
        }

    </MudAppBar>

    <MudDrawer @bind-Open="_drawerOpen" Elevation="5" Color="@(_currentTheme == lightTheme ? Color.Secondary : Color.Dark)">
        <MudDrawerHeader Class="d-flex align-center pt-0">
            <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="() => _drawerOpen = !_drawerOpen" />
            <MudText Typo="Typo.h6" Style="white-space: nowrap">Blazor Client</MudText>
        </MudDrawerHeader>
        <MudDrawerContainer>

            <AuthorizeView Context="DrawerContext">
                <NotAuthorized>

                    <MudNavLink Href="/login" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Login">
                        <MudText Typo="Typo.body1">Login</MudText>
                    </MudNavLink>

                    <MudNavLink Href="/register" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.EditNote">
                        <MudText Typo="Typo.body1">Register</MudText>
                    </MudNavLink>

                </NotAuthorized>
            </AuthorizeView>

            <MudNavLink Href="/" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Home">
                <MudText Typo="Typo.body1">Home</MudText>
            </MudNavLink>

            <MudNavLink Href="/counter" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Add">
                <MudText Typo="Typo.body1">Counter</MudText>
            </MudNavLink>

            @if (HostEnv.IsDevelopment())
            {
                <MudNavLink Href="/verifyauth" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Lock">
                    <MudText Typo="Typo.body1">Verify Authentication</MudText>
                </MudNavLink>

                <MudNavLink Href="/theme" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Palette">
                    <MudText Typo="Typo.body1">Color Theme</MudText>
                </MudNavLink>
            }

            <AuthorizeView Context="DrawerContext">
                <Authorized>
                    <MudNavLink Href="/logout" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Logout">
                        <MudText Typo="Typo.body1">Logout</MudText>
                    </MudNavLink>
                </Authorized>
            </AuthorizeView>

        </MudDrawerContainer>
    </MudDrawer>

    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.False" Class="mt-4">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>
